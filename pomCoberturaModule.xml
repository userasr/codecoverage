<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.datatorrent</groupId>
    <artifactId>dtx</artifactId>
    <version>3.9.0-SNAPSHOT</version>
  </parent>

  <artifactId>dtx-gateway</artifactId>
  <description>DataTorrent Gateway</description>
  <name>Gateway</name>

  <properties>
    <!-- use relative path so concurrent runs don't collide -->
    <test.dir>target/tmp</test.dir>
    <test.version>${project.version}</test.version>
    <nodejs.dir>${test.dir}/nodejs</nodejs.dir>
    <apitest.dir>${project.basedir}/src/test/javascript/apitest/</apitest.dir>
    <test.pkg.builder>${project.basedir}/src/test/scripts/build-test-package</test.pkg.builder>
  </properties>

  <dependencies>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${jetty.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>javax.servlet</artifactId>
          <groupId>org.eclipse.jetty.orbit</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlets</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-websocket</artifactId>
      <version>${jetty.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-mapper-asl</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-core</artifactId>
      <version>${jersey.version}</version>
 </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-json</artifactId>
      <version>${jersey.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-xc</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.codehaus.jackson</groupId>
          <artifactId>jackson-jaxrs</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${jersey.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>dtx-license</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-engine</artifactId>
      <version>${apex.core.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>jetty</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
 <exclusion>
          <artifactId>jetty-util</artifactId>
          <groupId>org.mortbay.jetty</groupId>
        </exclusion>
        <exclusion>
          <groupId>javax.servlet</groupId>
          <artifactId>servlet-api</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.0.1</version>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-engine</artifactId>
      <version>${apex.core.version}</version>
      <classifier>tests</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.apex</groupId>
      <artifactId>apex-shaded-ning19</artifactId>
      <version>1.0.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-embedder</artifactId>
      <version>3.3.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>2.4.2</version>
    </dependency>
    <dependency>
      <groupId>javax</groupId>
      <artifactId>javaee-endorsed-api</artifactId>
      <version>6.0</version>
      <type>jar</type>
    </dependency>
 <dependency>
      <groupId>javax.mail</groupId>
      <artifactId>javax.mail-api</artifactId>
      <version>1.5.5</version>
      <type>jar</type>
    </dependency>
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>1.5.5</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-jaxrs</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.jackson</groupId>
      <artifactId>jackson-xc</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>dtx-security</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-all</artifactId>
      <version>1.8.5</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.jvnet.mock-javamail</groupId>
      <artifactId>mock-javamail</artifactId>
      <version>1.9</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.tomakehurst</groupId>
      <artifactId>wiremock</artifactId>
      <version>1.58</version>
      <scope>test</scope>
    </dependency>
 </dependencies>

  <build>
    <plugins>
           <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>cobertura-maven-plugin</artifactId>
                    </plugin>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>create-client-mvn-generated-classpath</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!--
              generate runtime classpath for running client in dev environment
              -->
              <outputFile>${project.build.directory}/mvn-generated-runtime-classpath-no-hadoop</outputFile>
              <includeScope>runtime</includeScope>
              <excludeGroupIds>org.apache.hadoop</excludeGroupIds>
            </configuration>
          </execution>
          <execution>
            <id>create-mvn-generated-classpath</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>build-classpath</goal>
            </goals>
            <configuration>
              <!-- needed to run the unit test to generate
              the required classpath that is required in the env
              of the launch container in the mini yarn cluster
              -->
              <outputFile>${project.build.directory}/test-classes/mvn-generated-classpath</outputFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
  <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <version>2.1.13</version>
        <executions>
          <execution>
            <id>create-git-version-info</id>
            <phase>generate-resources</phase>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <verbose>false</verbose>
          <prefix>git</prefix>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>target/classes/rts-git.properties</generateGitPropertiesFilename>
          <failOnNoGitDirectory>false</failOnNoGitDirectory>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <maxAllowedViolations>0</maxAllowedViolations>
          <logViolationsToConsole>${checkstyle.console}</logViolationsToConsole>
          <suppressionsLocation>gateway-checkstyle-suppressions.xml</suppressionsLocation>
        </configuration>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>api-test</id>
      <activation>
        <property>
          <name>apitest</name>  <!-- use -Dapitest on commandline to trigger -->
        </property>
      </activation>

      <dependencies>
        <dependency>
          <groupId>io.wcm.maven.plugins</groupId>
          <artifactId>nodejs-maven-plugin</artifactId>
          <version>1.0.6</version>
          <scope>test</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <artifactId>exec-maven-plugin</artifactId>
            <groupId>org.codehaus.mojo</groupId>

            <configuration>
              <executable>${test.pkg.builder}</executable>
              <workingDirectory>${test.dir}</workingDirectory>
              <arguments>
                <argument>${test.version}</argument>
                <argument>${project.basedir}</argument>
              </arguments>
            </configuration>

          </plugin>

          <plugin>
            <groupId>io.wcm.maven.plugins</groupId>
            <artifactId>nodejs-maven-plugin</artifactId>
            <version>1.0.6</version>
     <configuration>
              <nodeJsDirectory>${nodejs.dir}</nodeJsDirectory>
              <nodeJsVersion>0.12.5</nodeJsVersion>
              <npmVersion>2.11.2</npmVersion>
              <tasks>
                <npmInstallTask>
                  <workingDirectory>${apitest.dir}</workingDirectory>
                </npmInstallTask>

                <!-- process all directories under test/v2
                -->
                <nodeJsTask>
                  <workingDirectory>${apitest.dir}</workingDirectory>
                  <moduleName>mocha</moduleName>
                  <arguments>
                    <argument>test/v2/*</argument>
                  </arguments>
                </nodeJsTask>

              </tasks>
            </configuration>
          </plugin>  <!-- nodejs -->
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
